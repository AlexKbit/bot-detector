version: "3"

networks:
  sparknet:
    driver: bridge

services:
# =============== Zookeeper services ===============
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    networks:
     - sparknet
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./container-data/zoo1/data:/data
      - ./container-data/zoo1/datalog:/datalog
# =============== Kafka services ===============
  kafka1:
    image: confluentinc/cp-kafka:5.2.2
    hostname: kafka1
    networks:
     - sparknet
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      #KAFKA_CREATE_TOPICS: "click-stream:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./container-data/kafka1/data:/var/lib/kafka/data
      - ./container-data/kafka1/logs:/logs
    depends_on:
      - zoo1

  kafka2:
    image: confluentinc/cp-kafka:5.2.2
    hostname: kafka2
    networks:
     - sparknet
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./container-data/kafka2/data:/var/lib/kafka/data
      - ./container-data/kafka2/logs:/logs
    depends_on:
      - zoo1

  kafka3:
    image: confluentinc/cp-kafka:5.2.2
    hostname: kafka3
    networks:
     - sparknet
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./container-data/kafka3/data:/var/lib/kafka/data
      - ./container-data/kafka3/logs:/logs
    depends_on:
      - zoo1

# =============== Cassandra services ===============
#  cassandra-seed:
#    image: cassandra:latest
#    ports:
#      - "9042:9042"
#    volumes:
#      - "./container-data/cassandra_data_seed:/var/lib/cassandra"
#    environment:
#      - "CASSANDRA_SEEDS=cassandra-seed"
#      - "CASSANDRA_CLUSTER_NAME=Test Cluster"
#      - "CASSANDRA_DC=se1"
#      - "CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch"
#
#
#  cassandra1:
#    image: cassandra:latest
#    volumes:
#      - "./container-data/cassandra_data_1:/var/lib/cassandra"
#    environment:
#      - "CASSANDRA_SEEDS=cassandra-seed"
#      - "CASSANDRA_CLUSTER_NAME=Test Cluster"
#      - "CASSANDRA_DC=se1"
#      - "CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch"
#    depends_on:
#      - cassandra-seed
#
#  cassandra2:
#    image: cassandra:latest
#    volumes:
#      - "./container-data/cassandra_data_2:/var/lib/cassandra"
#    environment:
#      - "CASSANDRA_SEEDS=cassandra-seed"
#      - "CASSANDRA_CLUSTER_NAME=Test Cluster"
#      - "CASSANDRA_DC=se1"
#      - "CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch"
#    depends_on:
#      - cassandra-seed
# =============== Spark services ===============
  spark-master:
    image: bde2020/spark-master:2.4.1-hadoop2.7
    hostname: spark-master
    networks:
     - sparknet
    environment:
      SPARK_PUBLIC_DNS: 0.0.0.0
      INIT_DAEMON_STEP: setup_spark
      SPARK_DEPLOY_DEFAULTCORES: 2
    ports:
     - 4040:4040
     - 6066:6066
     - 7077:7077
     - 8080:8080
    volumes:
     - ./container-data/spark-master/conf:/conf
     - ./container-data/spark-master/data:/tmp/data
     - ./container-data/spark-master/work:/spark/work
     - ./container-data/spark-allnodes:/jar

  spark-worker-1:
    image: bde2020/spark-worker:2.4.1-hadoop2.7
    networks:
     - sparknet
    depends_on:
     - "spark-master"
    hostname: spark-worker-1
    environment:
      SPARK_MASTER: spark://spark-master:7077
      SPARK_PUBLIC_DNS: 0.0.0.0
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
    ports:
     - 8081:8081
    volumes:
     - ./container-data/spark-worker-1/config:/conf
     - ./container-data/spark-worker-1/data:/tmp/data
     - ./container-data/spark-worker-1/work:/spark/work
     - ./container-data/spark-allnodes:/jar

  spark-worker-2:
    image: bde2020/spark-worker:2.4.1-hadoop2.7
    networks:
     - sparknet
    depends_on:
     - "spark-master"
    hostname: spark-worker-2
    environment:
      SPARK_MASTER: spark://spark-master:7077
      SPARK_PUBLIC_DNS: 0.0.0.0
      SPARK_WORKER_CORES: 1
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
    ports:
     - 8082:8082
    volumes:
     - ./container-data/spark-worker-2/config:/conf
     - ./container-data/spark-worker-2/data:/tmp/data
     - ./container-data/spark-worker-2/work:/spark/work
     - ./container-data/spark-allnodes:/jar
